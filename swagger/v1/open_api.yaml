---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/invitations":
    post:
      summary: Invitation
      tags:
      - Invitations
      description: Create a new invitation to join Slack Group
      operationId: createNewInvitation
      security:
      - Bearer: []
      parameters: []
      responses:
        '201':
          description: Creates a new invitation
          content: {}
        '302':
          description: Resend an existing invitation
          content: {}
        '422':
          description: invalid parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/errors_object"
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/errors_object"
        '405':
          description: invalid input
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/errors_object"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/invitation"
    get:
      summary: Invitation
      tags:
      - Invitations
      security:
      - Bearer: []
      responses:
        '200':
          description: Retrieve invitations
          content: {}
  "/api/v1/jobs":
    get:
      summary: All jobs
      tags:
      - Jobs
      security:
      - Bearer: []
      parameters:
      - name: page[number]
        in: query
        required: false
        description: Allow navigation through a large set of objects
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Return published and approved jobs
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/jobs"
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/errors_object"
  "/api/v1/jobs/{id}":
    get:
      summary: Retrieves a job
      tags:
      - Job
      security:
      - Bearer: []
      parameters:
      - name: id
        in: path
        description: ID of a job that you wish to retrieve
        required: true
        schema:
          type: string
      responses:
        '200':
          description: job found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/jobs"
  "/api/v1/users":
    get:
      summary: All users
      tags:
      - Users
      security:
      - Bearer: []
      parameters:
      - name: page[number]
        in: query
        required: false
        description: Allow navigation through a large set of objects
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Return verified users
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/users"
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/errors_object"
  "/api/v1/users/{id}":
    get:
      summary: Retrieves a user
      tags:
      - User
      security:
      - Bearer: []
      parameters:
      - name: id
        in: path
        description: ID of a user that you wish to retrieve
        required: true
        schema:
          type: string
      responses:
        '200':
          description: user found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/user"
        '404':
          description: user not found
          content: {}
  "/api/v1/users/search":
    get:
      summary: Searches for a user using an incorrect query parameter
      tags:
      - User
      security:
      - Bearer: []
      parameters:
      - name: query
        in: query
        description: search query
        schema:
          type: string
      responses:
        '200':
          description: user found by first_name, last_name, email or title
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/users"
        '404':
          description: User not found
          content: {}
        '422':
          description: Invalid request
          content: {}
components:
  schemas:
    errors_object:
      type: object
      properties:
        errors:
          "$ref": "#/components/schemas/errors_map"
    errors_map:
      type: object
      additionalProperties:
        type: array
        items:
          type: string
    jobs:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              attributes:
                type: object
                properties:
                  title:
                    type: string
                  currency:
                    type: string
                  salary:
                    type: string
                  creator_name:
                    type: string
                  description:
                    type: string
                  last_updated:
                    type: string
        meta:
          type: object
          properties:
            total:
              type: integer
        pagination:
          properties:
            current_page:
              type: integer
            last_page:
              type: integer
              nullable: true
            next_page_url:
              type: string
              nullable: true
            prev_page_url:
              type: string
              nullable: true
    users:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              attributes:
                type: object
                properties:
                  first_name:
                    type: string
                    nullable: true
                  last_name:
                    type: string
                    nullable: true
                  email:
                    type: string
                  nickname:
                    type: string
                    nullable: true
                  tilde_url:
                    type: string
                  location:
                    type: string
                    nullable: true
                  biography:
                    type: string
                    nullable: true
                  title:
                    type: string
                    nullable: true
                  company_name:
                    type: string
                    nullable: true
                  twitter_handle:
                    type: string
                    nullable: true
                  confirmed:
                    type: boolean
                  confirmed_at:
                    type: string
                  last_updated:
                    type: string
        meta:
          type: object
          properties:
            total:
              type: integer
        pagination:
          properties:
            current_page:
              type: integer
            last_page:
              type: integer
              nullable: true
            next_page_url:
              type: string
              nullable: true
            prev_page_url:
              type: string
              nullable: true
    user:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              type: string
            attributes:
              type: object
              properties:
                first_name:
                  type: string
                  nullable: true
                last_name:
                  type: string
                  nullable: true
                email:
                  type: string
                nickname:
                  type: string
                  nullable: true
                tilde_url:
                  type: string
                location:
                  type: string
                  nullable: true
                biography:
                  type: string
                  nullable: true
                title:
                  type: string
                  nullable: true
                company_name:
                  type: string
                  nullable: true
                twitter_handle:
                  type: string
                  nullable: true
                confirmed:
                  type: boolean
                confirmed_at:
                  type: string
                last_updated:
                  type: string
    invitation:
      type: object
      properties:
        invitation:
          type: object
          properties:
            invitee_title:
              type: string
            invitee_name:
              type: string
            invitee_email:
              type: string
            slack_uid:
              type: string
            invitee_company:
              type: string
          required:
          - invitee_email
          - invitee_name
  securitySchemes:
    Bearer:
      description: Authorization in the header
      type: apiKey
      name: Authorization
      in: header
servers:
- url: https://menadevs.com/api/v1/
  variables:
    defaultHost:
      default: www.menadevs.com/api/v1/
- url: http://localhost:3000/api/v1/
  variables:
    defaultHost:
      default: localhost:3000/api/v1/
